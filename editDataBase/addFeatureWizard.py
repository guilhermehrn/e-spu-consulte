# -*- coding: utf-8 -*-
"""
/***************************************************************************
 addFeatureWizard
                                 A QGIS plugin
 Consulta Sobreposição com áreas do Governo Federal do Brasil
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-11-12
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Guilherme Henrique
        email                : guilherme.nascimento@planejamento.gov.br
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""



import os

from qgis.PyQt import uic
from qgis.PyQt.QtWidgets import  QDialog, QWizard, QWizardPage

#from qgis.PyQt import QtCore.
from .addAttribute import AddAttribute
from .selectTable import SelectTable
from ..dbTools.dbTools import DbTools

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'addFeatureWizard.ui'))


class Page1(QWizardPage, FORM_CLASS):

    def __init__(self, parent=None):
        super().__init__(parent)
        QWizardPage.__init__(self.wizardPage1)



class AddFeatureWizard(QWizard, QWizardPage, FORM_CLASS):
    def __init__(self, iface):
        """Constructor."""

        QWizard.__init__(self)


        self.addPage(Page1(self))
        #super().__init__(parent)
        #self.iface = iface
        #loader = QtUiTools.QUiLoader()
        #loader.load(FORM_CLASS, parent=None)
        #self.dataInsert = {}

        #self.radioButtonObjetoSelecAddFeature.clicked.connect(self.radioButtonControl)
        #self.radioButtonFromFileAddFeature.clicked.connect(self.radioButtonControl)
        #self.nextScreen.clicked.connect(self.enterAtributo)
        #self.tablesGeo = DbTools().getTablesGeo("public")


    # def radioButtonControl(self):
    #     if self.radioButtonFromFileAddFeature.isChecked():
    #         self.mQgsFileWidget.setEnabled(True)
    #     if not self.radioButtonFromFileAddFeature.isChecked():
    #         self.mQgsFileWidget.setEnabled(False)
    #
    # def enterAtributo(self):
    #
    #     d=SelectTable(self.iface, self.tablesGeo,self.dataInsert)
    #     print(self.dataInsert)
    #     self.close()
    #     d.exec_()

    # def isertPageForBoleanTipes(self):
    #     #TODO
    #
    # def isertPageForCodeListTipes(self):
    #     #TODO
    #
    # def isertPageForOuterTipes(self):
    #     #TODO


